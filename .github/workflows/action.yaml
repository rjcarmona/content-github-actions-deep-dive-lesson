
name: Deploy My Lambda Function

on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up python
        uses: actions/setup-python@v3
        with:
          python-version: 3.13
      - name: Install linting libraries
        run: |
          cd function
          pip install flake8
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up python
        uses: actions/setup-python@v3
        with:
          python-version: 3.13
      - name: Install libraries
        run: |
          cd function
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt -t .; fi
      - name: Create zip bundle
        run: |
          cd function
          zip -r ../${{ github.sha }}.zip .
      - name: Archieve artifact
        uses: actions/upload-artifact@v4
        with:
          name: zipped-bundle
          path: ${{ github.sha }}.zip
  upload:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: zipped-bundle
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET_KEY }}
          aws-region: us-east-1
      - name: Upload to S3
        run: aws s3 cp ${{ github.sha }}.zip s3://my-bucket-2321222ijis/${{ github.repository }}/${{ github.sha }}.zip

  nonprod:
    runs-on: ubuntu-latest
    needs: upload
    strategy:
      matrix:
        input: ["Hello", "Hi"]
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET_KEY }}
          aws-region: eu-north-1
      - name: Create test function
        run: |
            aws lambda create-function --function-name test-function-${{ matrix.input }} \
              --code S3Bucket=my-bucket-2321222ijis,S3Key=${{ github.repository }}/${{ github.sha }}.zip \
              --handler lambda_function.lambda_handler --runtime python3.13 \
              --role arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/my-lambda-role
      - name: Invoke test function 
        run: |
            aws lambda invoke --function-name test-function-${{ matrix.input }} \
              --payload $(echo "{\"input\": \"${{ matrix.input }}\"}" | base64) \
              --output json out 
            if grep -q "Error" out; then
              exit1
            fi
      - name: Destroy test function
        if: ${{ always() }}
        run: |
            aws lambda delete-function --function-name test-function-${{ matrix.input }}

  deploy:
    runs-on: ubuntu-latest
    needs: upload
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET_KEY }}
          aws-region: eu-north-1
      - name: Update function code
        run: |
            aws lambda update-function-code \
              --function-name my-function \
              --s3-bucket my-bucket-2321222ijis \
              --s3-key ${{ github.repository }}/${{ github.sha }}.zip \
              --publish
  docs:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Deploy docs
        uses: mhausenblas/mkdocs-deploy-gh-pages@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CONFIG_FILE: mkdocs.yaml
